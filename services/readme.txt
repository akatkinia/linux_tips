1)	Описание приложения: Simple app
2)	Приложение запускается только после запущенного сервиса syslog
3)	Приложение запускается только после запущенного сервиса network
4)	Приложение находится по след. Пути /usr/local/bin/app.jar
5)	Файл с переменными среды /etc/default/app
6)	Приложение запускается со следующими параметрами
  o	-Xms1024m -Xmx1024m -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true -Djava.io.tmpdir=/tmp
  o	-Dspring.config.name=application
-	Приложение запускается с правами пользователя user-app, который принадлежит к группе user-app-group
groupadd user-app-group
useradd user-app
usermod -aG user-app-group user-app
Запуск описан через su

7)	Стандартный вывод приложения осуществляется в syslog (logger)
8)	Вывод ошибок также осуществляется в syslog (logger)
9)	Также требуется каким-то образом остановить приложение при необходимости:
Остановка:
service simpleapp stop

Старт:
service simpleapp start

Рестарт:
service simpleapp restart

Статус:
service simpleapp status
_________________________
Скрипт относится к System V (sysVinit). Управление скриптами System V осуществляется с помощью команды service, которая работает с файлами инициализации в каталоге /etc/init.d/. Например, чтобы запустить службу с именем simpleapp, нужно выполнить команду:
sudo service simpleapp start
Аналогично, для остановки и перезапуска службы, используются команды:
sudo service simpleapp stop
sudo service simpleapp restart

Кроме того, можно использовать команду chkconfig, чтобы настроить автозапуск служб при загрузке системы:
sudo chkconfig simpleapp on
sudo chkconfig simpleapp off


Чтобы проверить, включена ли служба в автозапуск, нужно выполнить команду:
sudo chkconfig --list simpleapp
Эта команда выведет список уровней запуска (0-6), и для каждого уровня запуска указано, запускается ли служба автоматически (on) или нет (off). Если в списке для какого-то уровня запуска указано on, то служба запускается автоматически при загрузке системы для этого уровня. Если off, то не запускается. Если вы не видите никаких значений, то служба не настроена на запуск для этого уровня.
Уровни запуска - это набор состояний, в которых может находиться операционная система в зависимости от стадии загрузки.

Каждый уровень запуска представляет собой определенный набор служб (сервисов), которые автоматически запускаются при переходе в этот уровень. Это позволяет операционной системе настраивать определенный набор служб для определенных задач в зависимости от уровня запуска.

Например, уровень запуска 0 представляет собой состояние выключения системы, а уровень 6 - перезагрузку.

Существует несколько уровней запуска, которые могут отличаться в зависимости от операционной системы, но обычно они выглядят примерно так:

0 - выключение системы
1 - однопользовательский режим (только консольный режим без сети и дополнительных сервисов)
2 - многопользовательский режим с локальными ресурсами и без сети
3 - многопользовательский режим с сетью и без графического интерфейса
4 - не определено (обычно не используется)
5 - многопользовательский режим с графическим интерфейсом
6 - перезагрузка системы

_________________________

Также аналогичный скрипт написан под systemd. После размещения скрипта по пути /etc/systemd/system/ необходимо не забыть выполнить команду systemctl daemon-reload, чтобы systemd обнаружил новый юнит, и затем можно использовать команды systemctl start simpleapp, systemctl stop simpleapp, systemctl restart simpleapp и systemctl status simpleapp для управления сервисом.

Чтобы настроить автозапуск служб при загрузке системы:
sudo systemctl enable simpleapp
sudo systemctl disable simpleapp

Чтобы проверить, включена ли служба в автозапуск, нужно выполнить команду:
sudo systemctl is-enabled simpleapp


Уровни запуска (run levels) для каждого сервиса в systemd можно посмотреть с помощью команды systemctl list-unit-files --type=service.
Systemd работает со своей собственной системой целей (targets), каждая из которых определяет, какие сервисы будут запущены при достижении цели.
Например, цель multi-user.target подразумевает запуск сервисов, необходимых для запуска в многопользовательском режиме, в то время как цель graphical.target предполагает запуск сервисов, необходимых для работы графической среды.

Вы можете просмотреть список доступных целей с помощью команды systemctl list-unit-files --type=target. Кроме того, вы можете узнать, какие сервисы связаны с определенной целью, с помощью команды systemctl list-dependencies <имя_цели>.target.